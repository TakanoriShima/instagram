create database instagram default character set utf8;

use instagram;

create table users(
    id int primary key auto_increment, 
    name varchar(50) not null,
    nickname varchar(50) not null,
    email varchar(100) not null unique,
    password varchar(100) not null,
    avatar varchar(100) not null,
    profile varchar(500),
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_at timestamp,
    last_logined_at timestamp
);

create table posts(
    id int primary key auto_increment, 
    user_id int not null,
    title varchar(50) not null,
    body varchar(200) not null,
    image varchar(100) not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(user_id) references users(id)
    on delete cascade
    on update cascade
);

create table comments(
    id int primary key auto_increment, 
    user_id int not null,
    post_id int not null,
    body varchar(200),
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(user_id) references users(id)
    on delete cascade
    on update cascade,
    foreign key(post_id) references posts(id)
    on delete cascade
    on update cascade
);

create table favorites(
    id int primary key auto_increment, 
    user_id int not null,
    post_id int not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(user_id) references users(id)
    on delete cascade
    on update cascade,
    foreign key(post_id) references posts(id)
    on delete cascade
    on update cascade,
    unique user_post_index(user_id, post_id)
);

create table follows(
    id int primary key auto_increment, 
    follow_user_id int not null,
    followed_user_id int not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(follow_user_id) references users(id)
    on delete cascade
    on update cascade,
    foreign key(followed_user_id) references users(id)
    on delete cascade
    on update cascade,
    unique follow_followed_index(follow_user_id, followed_user_id),
    CONSTRAINT not_me_check CHECK(follow_user_id != followed_user_id)
);